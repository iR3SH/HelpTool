<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Monsters" xml:space="preserve">
    <value>Monstres</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>Items</value>
  </data>
  <data name="Spells" xml:space="preserve">
    <value>Sorts</value>
  </data>
  <data name="Configuration" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="DbHost" xml:space="preserve">
    <value>Hôte</value>
  </data>
  <data name="DbName" xml:space="preserve">
    <value>Nom de la Base de Données</value>
  </data>
  <data name="DbUser" xml:space="preserve">
    <value>Nom d'Utilisateur</value>
  </data>
  <data name="DbPassword" xml:space="preserve">
    <value>Mot de passe</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Sauvegarder</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Erreur</value>
  </data>
  <data name="Error_DbCredConnection" xml:space="preserve">
    <value>Les champs de connexion à la base de données ne sont pas correcte</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Succès</value>
  </data>
  <data name="Success_DbConnect" xml:space="preserve">
    <value>La base de données a été correctement connectée !</value>
  </data>
  <data name="Effect" xml:space="preserve">
    <value>Effet :</value>
  </data>
  <data name="JetMin" xml:space="preserve">
    <value>Jet Min :</value>
  </data>
  <data name="JetMax" xml:space="preserve">
    <value>Jet Max (0 si fix) :</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Ajouter</value>
  </data>
  <data name="Generate" xml:space="preserve">
    <value>Générer</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="DeleteAll" xml:space="preserve">
    <value>Supprimer tout les effets</value>
  </data>
  <data name="Up" xml:space="preserve">
    <value>Monter</value>
  </data>
  <data name="Down" xml:space="preserve">
    <value>Descendre</value>
  </data>
  <data name="NotConfigured" xml:space="preserve">
    <value>Vous devez d'abord configurer la connexion à la base de donnée</value>
  </data>
  <data name="StatsCreator" xml:space="preserve">
    <value>Générateur de Jet d'Item</value>
  </data>
  <data name="French" xml:space="preserve">
    <value>Français</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>Anglais</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="ItemType" xml:space="preserve">
    <value>Type d'Item</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="Level" xml:space="preserve">
    <value>Niveau</value>
  </data>
  <data name="ItemStats" xml:space="preserve">
    <value>Jet de l'item</value>
  </data>
  <data name="GenerateStats" xml:space="preserve">
    <value>Générer les Stats</value>
  </data>
  <data name="Pods" xml:space="preserve">
    <value>Poids</value>
  </data>
  <data name="ItemSetId" xml:space="preserve">
    <value>Id de la Panoplie (-1 s'il n'y en a pas)</value>
  </data>
  <data name="CreateItem" xml:space="preserve">
    <value>Créer l'item</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Prix</value>
  </data>
  <data name="Terms" xml:space="preserve">
    <value>Conditions</value>
  </data>
  <data name="WeaponInfo" xml:space="preserve">
    <value>Infos de l'Arme</value>
  </data>
  <data name="BuyPrice" xml:space="preserve">
    <value>Points pour l'achat</value>
  </data>
  <data name="NewPrice" xml:space="preserve">
    <value>Nouveau Prix</value>
  </data>
  <data name="AvgPrice" xml:space="preserve">
    <value>Prix Moyen HDV</value>
  </data>
  <data name="Sold" xml:space="preserve">
    <value>Sold</value>
  </data>
  <data name="ItemCreateError" xml:space="preserve">
    <value>Une erreur est survenue lors de la création de l'item</value>
  </data>
  <data name="NewGrade" xml:space="preserve">
    <value>Nouveau Grade</value>
  </data>
  <data name="Neutral" xml:space="preserve">
    <value>Neutre</value>
  </data>
  <data name="Angel" xml:space="preserve">
    <value>Ange</value>
  </data>
  <data name="Demon" xml:space="preserve">
    <value>Brâkmarien</value>
  </data>
  <data name="Damage" xml:space="preserve">
    <value>Dommages</value>
  </data>
  <data name="DamagePerc" xml:space="preserve">
    <value>% Dommages</value>
  </data>
  <data name="Vitality" xml:space="preserve">
    <value>Vitalité</value>
  </data>
  <data name="Sagesse" xml:space="preserve">
    <value>Sagesse</value>
  </data>
  <data name="Force" xml:space="preserve">
    <value>Force</value>
  </data>
  <data name="Agility" xml:space="preserve">
    <value>Agilité</value>
  </data>
  <data name="Soins" xml:space="preserve">
    <value>Soins</value>
  </data>
  <data name="SummonCrea" xml:space="preserve">
    <value>Créatures Invocables</value>
  </data>
  <data name="Colors" xml:space="preserve">
    <value>Couleurs</value>
  </data>
  <data name="IsBoss" xml:space="preserve">
    <value>Est un Boss ?</value>
  </data>
  <data name="IsSummonable" xml:space="preserve">
    <value>Est Invocable ?</value>
  </data>
  <data name="AddMobGrade" xml:space="preserve">
    <value>Ajouter le Niveau de Monstre</value>
  </data>
  <data name="CreateMonster" xml:space="preserve">
    <value>Créer le Monstre</value>
  </data>
  <data name="Effects" xml:space="preserve">
    <value>Effets</value>
  </data>
  <data name="EffectsCC" xml:space="preserve">
    <value>Effets CC</value>
  </data>
  <data name="DamageMin" xml:space="preserve">
    <value>Dommages Min</value>
  </data>
  <data name="DamageMax" xml:space="preserve">
    <value>Dommages Max</value>
  </data>
  <data name="EffectTarget" xml:space="preserve">
    <value>Type de Cible</value>
  </data>
  <data name="GlyphColor" xml:space="preserve">
    <value>Couleur de la Glyphe</value>
  </data>
  <data name="DurationEffect" xml:space="preserve">
    <value>Durée de l'Effet</value>
  </data>
  <data name="ChanceSuccess" xml:space="preserve">
    <value>Chance de Réussite (en %)</value>
  </data>
  <data name="Area" xml:space="preserve">
    <value>Zone</value>
  </data>
  <data name="AreaSize" xml:space="preserve">
    <value>Taille de la Zone</value>
  </data>
  <data name="AddEffect" xml:space="preserve">
    <value>Ajouter l'Effect</value>
  </data>
  <data name="RequiredLevel" xml:space="preserve">
    <value>Level Requis</value>
  </data>
  <data name="RequiredState" xml:space="preserve">
    <value>Etat Requis</value>
  </data>
  <data name="PaRequired" xml:space="preserve">
    <value>Pa pour lancer le sort</value>
  </data>
  <data name="PoMin" xml:space="preserve">
    <value>Portée Min</value>
  </data>
  <data name="PoMax" xml:space="preserve">
    <value>Portée Max</value>
  </data>
  <data name="CriticalHit" xml:space="preserve">
    <value>Coup Critique</value>
  </data>
  <data name="CriticalFail" xml:space="preserve">
    <value>Echec Critique</value>
  </data>
  <data name="InlineLaunch" xml:space="preserve">
    <value>Lancer en ligne</value>
  </data>
  <data name="LineSight" xml:space="preserve">
    <value>Ligne de Vue</value>
  </data>
  <data name="EmptyCell" xml:space="preserve">
    <value>Cellule vide</value>
  </data>
  <data name="EditableScope" xml:space="preserve">
    <value>Portée Modifiable</value>
  </data>
  <data name="FailEndTurn" xml:space="preserve">
    <value>EC fini le tour</value>
  </data>
  <data name="TypeSpell" xml:space="preserve">
    <value>Type de Sort</value>
  </data>
  <data name="LaunchPerTurn" xml:space="preserve">
    <value>Lancer par tour</value>
  </data>
  <data name="LaunchPerTurnPerPlayer" xml:space="preserve">
    <value>Lancer / Tour / Joueur</value>
  </data>
  <data name="TimeBetweenTwoLaunch" xml:space="preserve">
    <value>Temps entre deux lancers</value>
  </data>
  <data name="AddSpellLevel" xml:space="preserve">
    <value>Ajouter un niveau de Sort</value>
  </data>
  <data name="CreateSpell" xml:space="preserve">
    <value>Créer le Sort</value>
  </data>
  <data name="UpdateMonster" xml:space="preserve">
    <value>Mettre à jour le Monstre</value>
  </data>
  <data name="UpdateMobGrade" xml:space="preserve">
    <value>Mettre à jour le Grâde</value>
  </data>
</root>